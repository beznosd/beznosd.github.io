name: Deploy Jekyll site to Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: Setup Noble App
        run: cd apps/noble && npm install && npm run build
      - name: Copy Noble dist to _site
        run: cp -r noble/dist _site/noble
      - name: Setup Nostr App
        run: cd apps/nostr && npm install && npm run build
      - name: Copy Nostr dist to _site
        run: cp -r apps/nostr/dist _site/apps/nostr
      - name: QR App copy paulmillr-qr.js
        run: cp apps/qr/paulmillr-qr.js _site/apps/qr/paulmillr-qr.js
      - name: QR App copy qr-web-demo.js
        run: cp apps/qr/qr-web-demo.js _site/apps/qr/qr-web-demo.js
      - name: QR App copy qr-web-demo.css
        run: cp apps/qr/qr-web-demo.css _site/apps/qr/qr-web-demo.css
      - name: QR App copy index.html
        run: cp apps/qr/index.html _site/apps/qr/index.html
      # - name: Setup QR app
      #   run: cd apps/qr && npm install && npm run build
      # - name: Copy QR dist to _site
      #   run: cp apps/qr/compiled.js _site/apps/qr/compiled.js
      - name: Setup Steg App
        run: cp -r apps/steg _site/apps/steg
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
